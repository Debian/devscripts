# System configuration file for cowpoke
# This file is sourced as a bash shell script, see cowpoke(1) for more details.

# Global defaults
# These apply to every arch and dist in a single cowpoke invocation.
# ------------------------------------------------------------------

# The hostname of the machine where cowbuilder is installed
# eg. BUILDD_HOST="buildd.your.org"
BUILDD_HOST=

# The username for unprivileged operations on BUILDD_HOST
# If unset the user that invoked cowpoke will be assumed, or the user that
# is configured for the BUILDD_HOST in your ssh config will be used.
#BUILDD_USER=

# The Debian architecture(s) to build for.  A space separated list of
# architectures may be used here to build for all of them in a single pass.
#BUILDD_ARCH="$(dpkg-architecture -qDEB_BUILD_ARCH 2>/dev/null)"

# The Debian distro to build for.  A space separated list of distros may be
# used here to build for all of them in a single pass.
#BUILDD_DIST="unstable"

# The directory (under BUILDD_USER's home if relative) to upload packages
# for building and where build logs and the result of post-build checks will
# be placed
#INCOMING_DIR="cowbuilder-incoming"

# The filesystem root for all pbuilder COW and result files.  Arch and dist
# specific subdirectories normally will be created under this.  The apt cache
# and temporary build directory will also be located under this path.
#PBUILDER_BASE="/var/cache/pbuilder"

# The gpg key id to pass to debsign's -k option.  eg. SIGN_KEYID="0x12345678"
# Leave this unset if you do not wish to sign packages built in this way.
#SIGN_KEYID=

# The 'host' alias to pass to dput.  eg. UPLOAD_QUEUE="ftp-master"
# Leave this unset if you do not wish to upload packages built this way.
# This option will be ignored if SIGN_KEYID is unset.
#UPLOAD_QUEUE=

# The command to use to gain root privileges on the remote build machine.
# This is only required to invoke cowbuilder and allow it to enter its chroot,
# so you may restrict this user to only being able to run that command with
# escalated privileges.  Something like this in sudoers will enable invoking
# cowbuilder without an additional password entry required:
#   youruser ALL = NOPASSWD: /usr/sbin/cowbuilder
# Alternatively you could use ssh with a forwarded key, or whatever other
# mechanism suits your local access policy.  su -c isn't really suitable
# here due to its quoting requirements being different from all the rest.
#BUILDD_ROOTCMD="sudo"

# The utility to use when creating a new build root.  Alternatives are
# debootstrap or cdebootstrap.
#DEBOOTSTRAP="cdebootstrap"

# If set, package files resulting from the build will be copied to the path
# (local or remote) that this is set to, after the build completes.  It is
# unset by default and can be overridden with --return or --no-return.
# The given path must exist, it will not be created.
#RETURN_DIR="."

# =============================================================================
#
# Arch and dist specific options
# These are variables of the form: $arch_$dist_VAR, which apply only for a
# particular target arch/dist build.  The following variables are supported:
#
# $arch_$dist_RESULT_DIR  - The directory where pbuilder/cowbuilder will place
#                           the built package, and where any previously built
#                           packages may be found for comparison using debdiff
#                           after building.
#
# $arch_$dist_BASE_PATH   - The directory where the COW master files are found.
#
# $arch_$dist_BASE_DIST   - The code name to pass as the --distribution option
#                           for cowbuilder instead of $dist. This is necessary
#                           when $dist is a locally significant name assigned
#                           to some specially configured build chroot, such as
#                           'wheezy_backports', and not the formal suite name
#                           of a distro release known to debootstrap.
#
# $arch_$dist_CREATE_OPTS - A bash array containing additional options to pass
#                           verbatim to cowbuilder when this chroot is created
#                           for the first time (using the --create option).
#                           This is useful when options like --othermirror are
#                           wanted to create specialised chroot configurations
#                           such as 'wheezy_backports'.
#
# $arch_$dist_UPDATE_OPTS - A bash array containing additional options to pass
#                           verbatim to cowbuilder each time the base of this
#                           chroot is updated.
#
# $arch_$dist_BUILD_OPTS  - A bash array containing additional options to pass
#                           verbatim to cowbuilder each time a package build is
#                           performed in this chroot.  This is useful when you
#                           want to use some option like --twice which cowpoke
#                           does not directly need to care about.
#
# Each element in these arrays corresponds to a single argument (in the ARGV
# sense) that will be passed to cowbuilder.  This ensures that arguments which
# may contain whitespace or have strange quoting requirements or other special
# characters will not be mangled before they get to cowbuilder.
#
# Bash arrays are initialised using the following form:
#    VARIABLE=( "arg1" "arg 2" "--option" "value" "--opt=val" "etc. etc." )
#
#
# $arch_$dist_SIGN_KEYID      - An optional arch and dist specific override for
#                               the global SIGN_KEYID option.
#
# $arch_$dist_UPLOAD_QUEUE    - An optional arch and dist specific override for
#                               the global UPLOAD_QUEUE option.
#
# -----------------------------------------------------------------------------

#amd64_unstable_RESULT_DIR="$PBUILDER_BASE/amd64/unstable/result"
#amd64_unstable_BASE_PATH="$PBUILDER_BASE/amd64/unstable/base.cow"

#amd64_experimental_RESULT_DIR="$PBUILDER_BASE/amd64/experimental/result"
#amd64_experimental_BASE_PATH="$PBUILDER_BASE/amd64/experimental/base.cow"

#i386_unstable_RESULT_DIR="$PBUILDER_BASE/i386/unstable/result"
#i386_unstable_BASE_PATH="$PBUILDER_BASE/i386/unstable/base.cow"

#i386_experimental_RESULT_DIR="$PBUILDER_BASE/i386/experimental/result"
#i386_experimental_BASE_PATH="$PBUILDER_BASE/i386/experimental/base.cow"

#amd64_wheezy_bpo_BASE_DIST="wheezy"
#amd64_wheezy_bpo_CREATE_OPTS=(--othermirror "deb http://ftp.debian.org/debian wheezy-backports main")

