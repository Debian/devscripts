# System configuration file for cowpoke
# This file is sourced as a bash shell script, see cowpoke(1) for more details.

# Global defaults
# These apply to every arch and dist in a single cowpoke invocation.
# ------------------------------------------------------------------

# The hostname of the machine where cowbuilder is installed
# eg. BUILDD_HOST="buildd.your.com"
BUILDD_HOST=

# The username for unprivileged operations on BUILDD_HOST
#BUILDD_USER="$(id -un 2>/dev/null)"

# The Debian architecture(s) to build for.  A space separated list of
# architectures may be used here to build for all of them in a single pass.
#BUILDD_ARCH="$(dpkg-architecture -qDEB_BUILD_ARCH 2>/dev/null)"

# The Debian distro to build for.  A space separated list of distros may be
# used here to build for all of them in a single pass.
#BUILDD_DIST="unstable"

# The directory (under BUILDD_USER's home if relative) to upload packages
# for building and where build logs and the result of post-build checks will
# be placed
#INCOMING_DIR="cowbuilder-incoming"

# The filesystem root for all pbuilder COW and result files.  Arch and dist
# specific subdirectories will be created under this.
#PBUILDER_BASE="/var/cache/pbuilder"

# The gpg key id to pass to debsign's -k option.  eg. SIGN_KEYID="0x12345678"
# Leave this unset if you do not wish to sign packages built in this way.
#SIGN_KEYID=

# The 'host' alias to pass to dput.  eg. UPLOAD_QUEUE="ftp-master"
# Leave this unset if you do not wish to upload packages built this way.
# This option will be ignored if SIGN_KEYID is unset.
#UPLOAD_QUEUE=

# An optional command that may be used to gain root access from the remote
# build machine.  If unset, cowpoke will attempt to log in directly as root,
# which is the recommended method when used in conjunction with a secure key
# to grant root access to the machine.  If you prefer to gain root access
# using a simple password (or worse, a normal user password), then you can
# set this option to the security hole^W^W privilege escalation option of
# your choice.  If set, cowpoke will log in initially as the $BUILDD_USER,
# then use this command to gain the privileges that it required to execute
# the cowbuilder invocation script.
#BUILDD_ROOTCMD="sudo"

# The utility to use when creating a new build root.  Alternatives are
# debootstrap or cdebootstrap.
#DEBOOTSTRAP="cdebootstrap"


# =============================================================================
#
# Arch and dist specific options
# These are variables of the form: $arch_$dist_VAR, which apply only for a
# particular target arch/dist build.  The following variables are supported:
#
# $arch_$dist_RESULT_DIR  - The directory where pbuilder/cowbuilder will place
#                           the built package, and where any previously built
#                           packages may be found for comparison using debdiff
#                           after building.
#
# $arch_$dist_BASE_PATH   - The directory where the COW master files are found.
#
# -----------------------------------------------------------------------------

#amd64_unstable_RESULT_DIR="$PBUILDER_BASE/amd64/unstable/result"
#amd64_unstable_BASE_PATH="$PBUILDER_BASE/amd64/unstable/base.cow"

#amd64_experimental_RESULT_DIR="$PBUILDER_BASE/amd64/experimental/result"
#amd64_experimental_BASE_PATH="$PBUILDER_BASE/amd64/experimental/base.cow"

#i386_unstable_RESULT_DIR="$PBUILDER_BASE/i386/unstable/result"
#i386_unstable_BASE_PATH="$PBUILDER_BASE/i386/unstable/base.cow"

#i386_experimental_RESULT_DIR="$PBUILDER_BASE/i386/experimental/result"
#i386_experimental_BASE_PATH="$PBUILDER_BASE/i386/experimental/base.cow"

