#!/bin/sh

# Copyright (C) 2013, Rafael Laboissiere <rafael@laboissiere.net>
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published by the
# Free Software Foundation; either version 3 of the License, or (at your
# option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General
# Public License for more details.
#
# On Debian systems, the complete text of the GNU General Public License
# version 3 can be found in the /usr/share/common-licenses/GPL-3 file.

test_dir=$(readlink -f "${0%/*}")

# Operation mode
if test "$1" = --installed; then
    COMMAND="uscan --no-conf"
    shift
else
    top_srcdir=$(readlink -f "${0%/*}/..")
    make -C "$top_srcdir/scripts" uscan mk-origtargz uupdate
    PATH="$top_srcdir/scripts:$PATH"
    PERL5LIB="$top_srcdir/lib"
    export PERL5LIB
    COMMAND="uscan --no-conf"
fi

# Initial Debian revision value is distribution dependent
SUFFIX="1"
if which dpkg-vendor >/dev/null 2>&1; then
    case "$(dpkg-vendor --query Vendor 2>/dev/null)" in
	"Ubuntu")
	    SUFFIX="0ubuntu1"
	    ;;
    esac
fi

# set safe defaults
WEBSCRIPT=":"
DEBUGECHO=":"
DEBUGLSLR=":"
DEBUGBASH=":"
# comment out for debug
#COMMAND="$COMMAND --debug"
#DEBUGECHO=echo
#DEBUGBASH="bash -i"
#DEBUGBASH="ls -laR"
cleanup(){
    kill -9 $(cat $TMPDIR/$REPOPATH/pid)
    rm -rf $TMPDIR
    echo ""
}

spawnHttpServer(){
    (
	USCAN_HTTP_SERVER=${USCAN_HTTP_SERVER:-server.py}
	mkdir -p $TMPDIR/$REPOPATH
	cd $TMPDIR/$REPOPATH
	python "$test_dir/uscan/$USCAN_HTTP_SERVER" 2>log &
	echo $! > pid
	while ! [ -s port ]; do
	    :
	done
	unset USCAN_HTTP_SERVER
    )
}

trap cleanup 1 2 3 13 15

containsName(){
  echo "$1" | fgrep -q "$2"
  echo $?
}

. "${0%/*}/shunit2-helper-functions.sh"

# The following tests do the following: (1) create a minimal Debian package
# directory, containing minimal files debian/{changelog,watch,copyright},
# (2) create a minimal repository, containing a tarball (built on the fly),
# (3) start an HTTP server that works offline, using the SimpleHTTPServer
# module of Python, and (4) run uscan inside that minimal universe.

# make debian/ in `pwd`
# debian/watch contains $WATCHVER and $WATCHLINE with template URL updated
makeDebianDir() {
    DEBNAME=${1:-foo} # Debian source package name
    DEBVER=${2:-1.0}  # Debian source package version
    mkdir -p debian/source

    cat <<END > debian/rules
%:
	dh $@
END
chmod 755 debian/rules

    cat <<END > debian/changelog
$DEBNAME ($DEBVER) unstable; urgency=low

  * Release of the $DEBNAME package $DEBVER.

 -- Joe Developer <jd@debian.org>  Mon, 02 Nov 2013 22:21:31 -0100
END
    # debian/source/format
    case $DEBVER in
	*-*) # non-native package
	    echo "3.0 (quilt)" > debian/source/format
	     ;;
	*) # native package
	    echo "3.0 (native)" > debian/source/format
	     ;;
    esac
    # debian/copyright
    echo "Format: http://www.debian.org/doc/packaging-manuals/copyright-format/1.0/" \
	> debian/copyright
    if [ "$FILEEXCLUDE" = "1" ]; then
	cat <<'END' >> debian/copyright
Files-Excluded: exclude-this
 exclude-dir
 */exclude-dir
 .*
 */js/jquery.js
 ;?echo?baz;?#
END
    elif [ "$FILEEXCLUDE" = "2" ]; then
	cat <<'END' >> debian/copyright
Files-Excluded-foo: exclude-this
 exclude-dir
 */exclude-dir
 .*
 */js/jquery.js
 ;?echo?baz;?#
Files-Excluded-bar: exclude-this
 exclude-dir
 */exclude-dir
 .*
 */js/jquery.js
 ;?echo?baz;?#
Files-Excluded-baz: exclude-this
 exclude-dir
 */exclude-dir
 .*
 */js/jquery.js
 ;?echo?baz;?#
END
    elif [ "$FILEEXCLUDE" = "3" ]; then
	cat <<'END' >> debian/copyright
Files-Excluded: exclude-this
 exclude-dir
 */exclude-dir
 .*
 */js/jquery.js
 ;?echo?baz;?#
Files-Excluded-bar: exclude-this
 exclude-dir
 */exclude-dir
 .*
 */js/jquery.js
 ;?echo?baz;?#
Files-Excluded-baz: exclude-this
 exclude-dir
 */exclude-dir
 .*
 */js/jquery.js
 ;?echo?baz;?#
END
    fi
    # debian/watch
    echo "version=$WATCHVER" > debian/watch
    echo "$WATCHLINE" | sed -e "s,@@@url@@@,http://localhost:${PORT}/,g" - \
	>> debian/watch
}


# make tarball in $REPOPATH/$POOLPATH
makeUpstreamTar() {
    UPNAME=${1:-foo} # Upstream package name
    UPVER=${2:-1.0}  # upstream package version
    COMPRESSION=${3:-gz} # archve compression type
    TYPE=${4:-non-native} # set this if native-type upstream
    OLDDIR=`pwd`
    mkdir -p $TMPDIR/$REPOPATH/$POOLPATH/$UPNAME-$UPVER
    cd $TMPDIR/$REPOPATH/$POOLPATH
    touch $UPNAME-$UPVER/FILE.$UPNAME.$UPVER
    touch $UPNAME-$UPVER/include-this
    touch $UPNAME-$UPVER/exclude-this
    touch $UPNAME-$UPVER/.hidden
    mkdir -p "$UPNAME-$UPVER/; echo baz; #/"
    mkdir -p $UPNAME-$UPVER/exclude-dir
    touch $UPNAME-$UPVER/exclude-dir/file
    mkdir -p $UPNAME-$UPVER/subdir/exclude-dir
    touch $UPNAME-$UPVER/subdir/exclude-dir/file2
    mkdir -p $UPNAME-$UPVER/docs/html/js/
    touch $UPNAME-$UPVER/docs/html/js/jquery.js
    if [ "$TYPE" = "native" ]; then
	cd $TMPDIR/$REPOPATH/$POOLPATH/$UPNAME-$UPVER
	makeDebianDir $UPNAME $UPVER
	cd $TMPDIR/$REPOPATH/$POOLPATH
    fi
    case $COMPRESSION in
	gz|gzip) tar -czf $UPNAME-$UPVER.tar.gz $UPNAME-$UPVER
	    ;;
	bz2|bzip2) tar --bzip2 -cf $UPNAME-$UPVER.tar.bz2 $UPNAME-$UPVER
	    ;;
	xz) tar --xz -cf $UPNAME-$UPVER.tar.xz $UPNAME-$UPVER
	    ;;
	zip)zip -r $UPNAME-$UPVER.zip $UPNAME-$UPVER
	    ;;
	*)  echo "Wrong compression mode: $COMPRESSION"
	    exit 1
	    ;;
	esac
    cd $OLDDIR
}

# setup a common watch file test environment
helperWatch() {
    local SITESCRIPT=${1:-siteWebNonNative}
    local VEROLD=${2:-1.0}
    local VERNEW=${3:-2.0}
    local PREFIX=$4
    local TMPDIR=$(mktemp -d)
    ORIGDIR=`pwd`
    PKG=${PKG:-foo}
    REPOPATH=${REPOPATH:-repo}
    POOLPATH=${POOLPATH:-pool}
    GZREPACK=${GZREPACK:-gz}
    XCOMMAND=${XCOMMAND:-$COMMAND}
    WATCHVER="${WATCHVER:-3}"
    WATCHLINE0="@@@url@@@/ (?:.*)/foo-([\.\d]+).tar.gz debian uupdate"
    WATCHLINE="${WATCHLINE:-$WATCHLINE0}"
    COMPONENTS=${COMPONENTS:-}
    FILEEXCLUDE=${FILEEXCLUDE:-0}
    cd $TMPDIR
    # start HTTP server with its root at $TMPDIR/$REPOPATH
    spawnHttpServer
    PORT=$(cat $TMPDIR/$REPOPATH/port)
    $DEBUGECHO " ***** http://localhost:$PORT started showing $TMPDIR/$REPOPATH *****"
    # make web site
    $SITESCRIPT
    # make local $VEROLD source tree
    tar -xzf $TMPDIR/$REPOPATH/$POOLPATH/${PKG}-${VEROLD}.tar.gz
    if [ -n "$PREFIX" ]; then
	mv $TMPDIR/${PKG}-${VEROLD} $TMPDIR/${PKG}-${PREFIX}${VEROLD}
    fi
    mv $TMPDIR/${PKG}-${PREFIX}${VEROLD} $TMPDIR/${PKG}
    cd $TMPDIR/${PKG}
    if [ ! -d debian ]; then
	makeDebianDir $PKG ${PREFIX}${VEROLD}-$SUFFIX
    fi
    local UUPDATE=""
    if grep -q "uupdate" $TMPDIR/${PKG}/debian/watch ; then
	UUPDATE=uupdate
    fi
    $XCOMMAND
    assertEquals "uscan: exit_code!=0 but exit_code=0" "$?" "0"
    cd $TMPDIR
    UTARBALL=${PKG}-${VERNEW}.tar.gz
    STARBALL=${PKG}_${PREFIX}${VERNEW}.orig.tar.$GZREPACK
    assertTrue "$UTARBALL missing: $WATCHLINE" "[ -f $UTARBALL ]"
    assertTrue "$STARBALL missing: $WATCHLINE" "[ -f $STARBALL ]"
    # check uupdate
    if [ "$UUPDATE" = "uupdate" ]; then
	cd $TMPDIR/${PKG}-${PREFIX}${VERNEW}
	assertTrue 'pristine tarball is not extracted' "[ -f debian/changelog ]"
	DVERSION=`dpkg-parsechangelog -ldebian/changelog -SVersion`
	assertEquals "uscan: Version should be ${PREFIX}${VERNEW}-$SUFFIX but $DVERSION" "$DVERSION" "${PREFIX}${VERNEW}-$SUFFIX"
	if [ "$FILEEXCLUDE" != "2" ]; then
	assertTrue 'file that must be present is excluded in the tarball' '[ -f include-this ]'
	fi
	if [ "$FILEEXCLUDE" = "1" ] || [ "$FILEEXCLUDE" = "3" ]; then
	assertFalse "file that must be excluded is present in the tarball" '[ -f exclude-this ]'
	assertFalse "hidden file that must be excluded is present in the tarball" '[ -f .hidden ]'
	assertFalse "dir that must be excluded is present in the tarball" '[ -d exclude-dir ]'
	assertFalse "subdir that must be excluded is present in the tarball" '[ -d subdir/exclude-dir ]'
	CONTENTS=$(ls -R)
	assertFalse "non-root-file that must be excluded is present in the tarball"	\
                $(containsName "$CONTENTS" jquery.js)
	assertFalse "path with whitespace that must be excluded is present in the tarball"	\
                $(containsName "$CONTENTS" "; echo baz; #/")
	fi
        for c in $COMPONENTS ; do
	    cd $TMPDIR/${PKG}-${PREFIX}${VERNEW}/$c
	assertTrue 'file that must be present is excluded in the tarball' '[ -f include-this ]'
	if [ "$FILEEXCLUDE" = "2" ] || [ "$FILEEXCLUDE" = "3" ]; then
	assertFalse "file that must be excluded is present in the orig-$c.tar" '[ -f exclude-this ]'
	assertFalse "hidden file that must be excluded is present in the orig-$c.tar" '[ -f .hidden ]'
	assertFalse "dir that must be excluded is present in the orig-$c.tar" '[ -d exclude-dir ]'
	assertFalse "subdir that must be excluded is present in the orig-$c.tar" '[ -d subdir/exclude-dir ]'
	CONTENTS=$(ls -R)
	assertFalse "non-root-file that must be excluded is present in the orig-$c.tar"	\
                $(containsName "$CONTENTS" jquery.js)
	assertFalse "path with whitespace that must be excluded is present in the orig-$c.tar"	\
                $(containsName "$CONTENTS" "; echo baz; #/")
	fi
	done
	cd $TMPDIR
    fi
    $DEBUGBASH
    cd $ORIGDIR
    cleanup
    unset REPOPATH
    unset POOLPATH
    unset GZREPACK
    unset XCOMMAND
    unset WATCHVER
    unset WATCHLINE
    unset COMPONENTS
    unset FILEEXCLUDE
}

# setup a common watch file test environment to see user-agent
helperWatchUA() {
    local SITESCRIPT=${1:-siteWebNonNative}
    TMPDIR=$(mktemp -d)
    ORIGDIR=`pwd`
    PKG=${PKG:-foo}
    REPOPATH=${REPOPATH:-repo}
    POOLPATH=${POOLPATH:-pool}
    XCOMMAND=${XCOMMAND:-$COMMAND}
    WATCHVER="${WATCHVER:-3}"
    WATCHLINE0="@@@url@@@/ (?:.*)/foo-([\.\d]+).tar.gz debian uupdate"
    WATCHLINE="${WATCHLINE:-$WATCHLINE0}"
    cd $TMPDIR
    # start HTTP server with its root at $TMPDIR/$REPOPATH
    spawnHttpServer
    PORT=$(cat $TMPDIR/$REPOPATH/port)
    $DEBUGECHO " ***** http://localhost:$PORT started showing $TMPDIR/$REPOPATH *****"
    # make web site
    $SITESCRIPT
    # make local $VEROLD source tree
    mkdir -p $TMPDIR/${PKG}
    cd $TMPDIR/${PKG}
    if [ ! -d debian ]; then
	makeDebianDir $PKG 1.0-$SUFFIX
    fi
    $XCOMMAND
    USERAGENTX="$(grep -ie '^User-Agent:' ../repo/log |head -1 | perl -p -e "s/\r//g" )"
    assertTrue "Bad $USERAGENTX" "[ \"$USERAGENTX\" = \"User-Agent: $USERAGENT\" ]"
    echo "SENT: \"User-Agent: $USERAGENT\""
    echo "GOT : \"$USERAGENTX\""
    $DEBUGBASH
    cd $ORIGDIR
    cleanup
    unset REPOPATH
    unset POOLPATH
    unset XCOMMAND
    unset WATCHVER
    unset WATCHLINE
}

# populate pool directory
siteNative() {
    local PKG=${1:-foo}
    makeUpstreamTar $PKG 0.0 gz native
    makeUpstreamTar $PKG 1.0 gz native
    makeUpstreamTar $PKG 2.0 gz native
    mkdir -p $TMPDIR/$REPOPATH/123/$PKG/ooo/
    mkdir -p $TMPDIR/$REPOPATH/124/$PKG/ooo/
    mkdir -p $TMPDIR/$REPOPATH/125/$PKG/ooo/
    ln -sf ../../../$POOLPATH/${PKG}-0.0.tar.gz $TMPDIR/$REPOPATH/123/$PKG/ooo/${PKG}-0.0.tar.gz
    ln -sf ../../../$POOLPATH/${PKG}-1.0.tar.gz $TMPDIR/$REPOPATH/124/$PKG/ooo/${PKG}-1.0.tar.gz
    ln -sf ../../../$POOLPATH/${PKG}-2.0.tar.gz $TMPDIR/$REPOPATH/125/$PKG/ooo/${PKG}-2.0.tar.gz
}

siteNonNative() {
    local PKG=${1:-foo}
    makeUpstreamTar $PKG 0.0 gz non-native
    makeUpstreamTar $PKG 1.0 gz non-native
    makeUpstreamTar $PKG 2.0 gz non-native
    mkdir -p $TMPDIR/$REPOPATH/123/$PKG/ooo/
    mkdir -p $TMPDIR/$REPOPATH/124/$PKG/ooo/
    mkdir -p $TMPDIR/$REPOPATH/125/$PKG/ooo/
    ln -sf ../../../$POOLPATH/${PKG}-0.0.tar.gz $TMPDIR/$REPOPATH/123/$PKG/ooo/${PKG}-0.0.tar.gz
    ln -sf ../../../$POOLPATH/${PKG}-1.0.tar.gz $TMPDIR/$REPOPATH/124/$PKG/ooo/${PKG}-1.0.tar.gz
    ln -sf ../../../$POOLPATH/${PKG}-2.0.tar.gz $TMPDIR/$REPOPATH/125/$PKG/ooo/${PKG}-2.0.tar.gz
}

# hide siteNative behind a web page
siteWebNative() {
    siteNative
    cat <<END > $TMPDIR/$REPOPATH/index.html
<html>
<head>
  <meta charset="utf-8">
</head>
<body>
<a href="/123/foo/ooo/foo-0.0.tar.gz">Very old</a> <br/ >
<a href="/124/foo/ooo/foo-1.0.tar.gz">A bit OLD</a> <br />
<a href="/125/foo/ooo/foo-2.0.tar.gz">Latest</a> <br />
</body>
<html>
END
}

siteWebNonNative() {
    siteNonNative
    cat <<END > $TMPDIR/$REPOPATH/index.html
<html>
<head>
  <meta charset="utf-8">
</head>
<body>
<a href="/123/foo/ooo/foo-0.0.tar.gz">Very old</a> <br/ >
<a href="/124/foo/ooo/foo-1.0.tar.gz">A bit OLD</a> <br />
<a href="/125/foo/ooo/foo-2.0.tar.gz">Latest</a> <br />
</body>
<html>
END
}

siteWebNonNative() {
    siteNonNative
    cat <<END > $TMPDIR/$REPOPATH/index.html
<html>
<head>
  <meta charset="utf-8">
</head>
<body>
<a href="/123/foo/ooo/foo-0.0.tar.gz">Very old</a> <br/ >
<a href="/124/foo/ooo/foo-1.0.tar.gz">A bit OLD</a> <br />
<a href="/125/foo/ooo/foo-2.0.tar.gz">Latest</a> <br />
</body>
<html>
END
}

siteWebNonNativeR() {
    makeUpstreamTar foo 0.0 gz non-native
    makeUpstreamTar foo 1.0 gz non-native
    makeUpstreamTar foo 2.0 gz non-native
    mkdir -p $TMPDIR/$REPOPATH/123/foo/ooo/
    mkdir -p $TMPDIR/$REPOPATH/124/foo/ooo/
    mkdir -p $TMPDIR/$REPOPATH/125/foo/ooo/
    ln -sf ../../../$POOLPATH/foo-0.0.tar.gz $TMPDIR/$REPOPATH/125/foo/ooo/foo-0.0.tar.gz
    ln -sf ../../../$POOLPATH/foo-1.0.tar.gz $TMPDIR/$REPOPATH/124/foo/ooo/foo-1.0.tar.gz
    ln -sf ../../../$POOLPATH/foo-2.0.tar.gz $TMPDIR/$REPOPATH/123/foo/ooo/foo-2.0.tar.gz
    cat <<END > $TMPDIR/$REPOPATH/index.html
<html>
<head>
  <meta charset="utf-8">
</head>
<body>
<a href="/125/foo/ooo/foo-0.0.tar.gz">Very old</a> <br/ >
<a href="/124/foo/ooo/foo-1.0.tar.gz">A bit OLD</a> <br />
<a href="/123/foo/ooo/foo-2.0.tar.gz">Latest</a> <br />
</body>
<html>
END
}

sitePrWebNonNative() {
    siteNonNative
    cat <<END > $TMPDIR/$REPOPATH/index.html
<html>
<head>
  <meta charset="utf-8">
</head>
<body>
<a href="/123/boo/xxx/boo-0.0.tar.gz">Very old</a> <br/ >
<a href="/124/boo/xxx/boo-1.0.tar.gz">A bit OLD</a> <br />
<a href="/125/boo/xxx/boo-2.0.tar.gz">Latest</a> <br />
</body>
<html>
END
}

siteWebNonNativeLarge() {
    makeUpstreamTar foo 19990101 gz non-native
    makeUpstreamTar foo 20000101 gz non-native
    makeUpstreamTar foo 20010101 gz non-native
    mkdir -p $REPOPATH/123/foo/ooo/
    mkdir -p $REPOPATH/124/foo/ooo/
    mkdir -p $REPOPATH/125/foo/ooo/
    ln -sf ../../../$POOLPATH/foo-19990101.tar.gz $TMPDIR/$REPOPATH/123/foo/ooo/foo-19990101.tar.gz
    ln -sf ../../../$POOLPATH/foo-20000101.tar.gz $TMPDIR/$REPOPATH/124/foo/ooo/foo-20000101.tar.gz
    ln -sf ../../../$POOLPATH/foo-20010101.tar.gz $TMPDIR/$REPOPATH/125/foo/ooo/foo-20010101.tar.gz
    cat <<END > $TMPDIR/$REPOPATH/index.html
<html>
<head>
  <meta charset="utf-8">
</head>
<body>
<a href="/123/foo/ooo/foo-19990101.tar.gz">Very old</a> <br/ >
<a href="/124/foo/ooo/foo-20000101.tar.gz">A bit OLD</a> <br />
<a href="/125/foo/ooo/foo-20010101.tar.gz">Latest</a> <br />
</body>
<html>
END
}

siteXmlNonNative() {
    siteNonNative
    cat <<END > $TMPDIR/$REPOPATH/index.html
<html>
<head>
  <meta charset="utf-8">
</head>
<body>
<Key>/123/foo/ooo/foo-0.0.tar.gz</Key> <br/ >
<Key>/124/foo/ooo/foo-1.0.tar.gz</Key> <br />
<Key>/125/foo/ooo/foo-2.0.tar.gz</Key> <br />
</body>
<html>
END
}

siteWebNonNativeMUT() {
    siteNonNative foo
    siteNonNative bar
    siteNonNative baz
    cat <<END > $TMPDIR/$REPOPATH/index.html
<html>
<head>
  <meta charset="utf-8">
</head>
<body>
<a href="/123/foo/ooo/foo-0.0.tar.gz">Very old</a> <br/ >
<a href="/124/foo/ooo/foo-1.0.tar.gz">A bit OLD</a> <br />
<a href="/125/foo/ooo/foo-2.0.tar.gz">Latest</a> <br />
<a href="/123/bar/ooo/bar-0.0.tar.gz">Very old</a> <br/ >
<a href="/124/bar/ooo/bar-1.0.tar.gz">A bit OLD</a> <br />
<a href="/125/bar/ooo/bar-2.0.tar.gz">Latest</a> <br />
<a href="/123/baz/ooo/baz-0.0.tar.gz">Very old</a> <br/ >
<a href="/124/baz/ooo/baz-1.0.tar.gz">A bit OLD</a> <br />
<a href="/125/baz/ooo/baz-2.0.tar.gz">Latest</a> <br />
</body>
<html>
END
}

# test a watch files

### VERSION 4 ###

# test native package w/o uupdate, bare HTTP server in normal order
testWatch4Native() {
    WATCHVER=4
    WATCHLINE='@@@url@@@/(\d+)/(.+)/(.+)/foo-([\.\d]+).tar.gz debian'
    helperWatch siteNative
}

# test non-native package with uupdate, bare HTTP server in normal order
testWatch4NonNative() {
    WATCHVER=4
    WATCHLINE='@@@url@@@(\d+)/(.+)/(.+)/ foo-([\.\d]+).tar.gz debian uupdate'
    helperWatch siteNonNative
}

# test 3 parameter watch line
testWatch4WebNative() {
    WATCHVER=4
    WATCHLINE='@@@url@@@ (?:.*)/foo-([\d\.]+).tar.gz debian'
    helperWatch siteWebNative
}

# test normal web page
testWatch4WebNonNative() {
    WATCHVER=4
    helperWatch
}

# test normal web page (Files-exclude)
testWatch4WebNonNativeFE() {
    FILEEXCLUDE=1
    WATCHVER=4
    helperWatch
}

# test normal web page (file path reverse order)
testWatch4WebNonNativeR() {
    WATCHVER=4
    helperWatch siteWebNonNativeR
}

# test for downloadurlmangle and filenamemangle for tricky web page
testWatch4PrWebNonNative() {
    WATCHVER=4
    WATCHLINE='opts="downloadurlmangle = s%boo/xxx%foo/ooo% ; s%boo-%foo-%, \
                     filenamemangle    = s%.*boo-(.*)%foo-$1% " \
    @@@url@@@/ (?:.*)/boo-([\d\.]+).tar.gz \
    debian uupdate'
    helperWatch sitePrWebNonNative
}

# test --download-current-version
testWatch4WebNonNativeDlCurrent() {
    WATCHVER=4
    XCOMMAND="$COMMAND --download-current-version"
    WATCHLINE='@@@url@@@/ (?:.*)/foo-([\.\d]+).tar.gz debian uupdate'
    helperWatch siteWebNonNative 1.0 1.0
}

# test --download-version
testWatch4WebNonNativeDlUversion() {
    WATCHVER=4
    XCOMMAND="$COMMAND --download-version 0.0"
    WATCHLINE='@@@url@@@/ (?:.*)/foo-([\.\d]+).tar.gz debian uupdate'
    helperWatch siteWebNonNative 1.0 0.0
}

# test --download-debversion uupdate 
testWatch4WebNonNativeDlDversion() {
    WATCHVER=4
    XCOMMAND="$COMMAND --download-debversion 0.0-1"
    WATCHLINE='@@@url@@@/ (?:.*)/foo-([\.\d]+).tar.gz debian uupdate'
    helperWatch siteWebNonNative 1.0 0.0
}

# Debian version is 0.19990101 for future proof while upstream is 19990101
testWatch4WebNonNativeLarge() {
    WATCHVER=4
    WATCHLINE='opts=" dversionmangle = s/0\.(.*)/$1/ , \
	oversionmangle = s/(.*)/0.$1/" \
	@@@url@@@  (?:.*)/foo-([\.\d]+).tar.gz debian uupdate'
    helperWatch siteWebNonNativeLarge 20000101 20010101 0.
}

# test for pagemangle
testWatch4XmlNonNative() {
    WATCHVER=4
    WATCHLINE='opts="pagemangle = \
	s%<Key>([^<]*)</Key>%<Key><a href=\"$1\">$1</a></Key>%g" \
	@@@url@@@/ (?:.*)/foo-([\d\.]+).tar.gz debian uupdate'
    helperWatch siteXmlNonNative
}

# test user-agent string setting via opts=
testWatch4WebNonNativeUA() {
    WATCHVER=4
    USCAN_HTTP_SERVER="server-head.py"
    USERAGENT="foo/bar; baz:12,3.45"
    WATCHLINE='opts="useragent= '$USERAGENT' "'"\n"'@@@url@@@/ (?:.*)/foo-([\.\d]+).tar.gz debian uupdate'
    helperWatchUA
    unset USERAGENT
    unset USCAN_HTTP_SERVER
}

# test repack and compression
testWatch4WebNonNativeBZ2() {
    WATCHVER=4
    WATCHLINE='opts=repack,compression=bz2 @@@url@@@/ (?:.*)/foo-([\.\d]+).tar.gz debian uupdate'
    GZREPACK=bz2
    helperWatch
    unset GZREPACK
}

# test repack and compression
testWatch4WebNonNativeXZ() {
    WATCHVER=4
    WATCHLINE='opts=repack,compression=xz @@@url@@@/ (?:.*)/foo-([\.\d]+).tar.gz debian uupdate'
    GZREPACK=xz
    helperWatch
    unset GZREPACK
}

# test spaces everywhere
testWatch4PrWebNonNativeXZ() {
    WATCHVER=4
    WATCHLINE='opts = "downloadurlmangle = s%boo/xxx%foo/ooo% ; s%boo-%foo-%, \
                     filenamemangle    = s%.*boo-(.*)%foo-$1% , \
                     repack , compression=xz" \
    @@@url@@@/ (?:.*)/boo-([\d\.]+).tar.gz \
    debian uupdate'
    GZREPACK=xz
    helperWatch sitePrWebNonNative
    unset GZREPACK
}

### VERSION 4 only ###

# test normal web page (MUT)
testWatch4WebNonNativeMUT() {
    WATCHVER=4
    COMPONENTS="bar baz"
    FILEEXCLUDE=3
    WATCHLINE='@@@url@@@ (?:.*)/foo-([\d\.]+).tar.gz debian
opts="component=bar" @@@url@@@ (?:.*)/bar-([\d\.]+).tar.gz same
opts="component=baz" @@@url@@@ (?:.*)/baz-([\d\.]+).tar.gz same uupdate'
    helperWatch siteWebNonNativeMUT
}

# test normal web page (MUT with O main)
testWatch4WebNonNativeMUT0() {
    WATCHVER=4
    COMPONENTS="foo bar baz"
    FILEEXCLUDE=2
    WATCHLINE='opts="component=foo" @@@url@@@ (?:.*)/foo-([\d\.]+).tar.gz debian
opts="component=bar" @@@url@@@ (?:.*)/bar-([\d\.]+).tar.gz same
opts="component=baz" @@@url@@@ (?:.*)/baz-([\d\.]+).tar.gz same uupdate'
    helperWatch siteWebNonNativeMUT
}

. shunit2
